{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bluet\\\\offer-vibe-checker\\\\src\\\\OfferVibeCheck.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OfferVibeCheck() {\n  _s();\n  const fileInputRef = useRef(null);\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(`File selected: ${file.name}`);\n      // Add your file processing logic here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black text-white text-center font-serif p-20 text-xl leading-relaxed overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"hover:text-lime-200 transform hover:-translate-y-1 transition duration-200\",\n      children: \"CONGRATULATIONS ON THE OFFER!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-normal mt-10 hover:text-lime-200 transform hover:-translate-y-1 transition duration-200\",\n      children: \"Now let's break it down...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUploadClick,\n      className: \"bg-gray-200 text-black border-none py-4 px-8 rounded-full cursor-pointer text-lg mt-10 shadow-lg inline-flex items-center justify-center gap-2 transition-all hover:bg-gray-500 hover:-translate-y-1 active:translate-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"uploadicon.png\",\n        alt: \"Upload pdf\",\n        className: \"h-6 mr-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \"Upload\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(OfferVibeCheck, \"YQqvMxdmg33cmOXmQcOjJm+FLVI=\");\n_c = OfferVibeCheck;\nvar _c;\n$RefreshReg$(_c, \"OfferVibeCheck\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","OfferVibeCheck","_s","fileInputRef","handleUploadClick","current","click","handleFileChange","event","file","target","files","console","log","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","type","ref","style","display","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bluet/offer-vibe-checker/src/OfferVibeCheck.js"],"sourcesContent":["import React, { useRef } from 'react';\r\n\r\nexport default function OfferVibeCheck() {\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleUploadClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      console.log(`File selected: ${file.name}`);\r\n      // Add your file processing logic here\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black text-white text-center font-serif p-20 text-xl leading-relaxed overflow-hidden\">\r\n      <h1 className=\"hover:text-lime-200 transform hover:-translate-y-1 transition duration-200\">\r\n        CONGRATULATIONS ON THE OFFER!\r\n      </h1>\r\n      <h2 className=\"text-2xl font-normal mt-10 hover:text-lime-200 transform hover:-translate-y-1 transition duration-200\">\r\n        Now let's break it down...\r\n      </h2>\r\n\r\n      <button\r\n        onClick={handleUploadClick}\r\n        className=\"bg-gray-200 text-black border-none py-4 px-8 rounded-full cursor-pointer text-lg mt-10 shadow-lg inline-flex items-center justify-center gap-2 transition-all hover:bg-gray-500 hover:-translate-y-1 active:translate-y-1\"\r\n      >\r\n        <img src=\"uploadicon.png\" alt=\"Upload pdf\" className=\"h-6 mr-3\" />\r\n        Upload\r\n      </button>\r\n\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n        accept=\"application/pdf\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAMC,YAAY,GAAGL,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,YAAY,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACRG,OAAO,CAACC,GAAG,CAAC,kBAAkBJ,IAAI,CAACK,IAAI,EAAE,CAAC;MAC1C;IACF;EACF,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,yFAAyF;IAAAC,QAAA,gBACtGhB,OAAA;MAAIe,SAAS,EAAC,4EAA4E;MAAAC,QAAA,EAAC;IAE3F;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLpB,OAAA;MAAIe,SAAS,EAAC,uGAAuG;MAAAC,QAAA,EAAC;IAEtH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELpB,OAAA;MACEqB,OAAO,EAAEjB,iBAAkB;MAC3BW,SAAS,EAAC,2NAA2N;MAAAC,QAAA,gBAErOhB,OAAA;QAAKsB,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC,YAAY;QAACR,SAAS,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,UAEpE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETpB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,GAAG,EAAEtB,YAAa;MAClBuB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,MAAM,EAAC,iBAAiB;MACxBC,QAAQ,EAAEtB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAzCuBD,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}